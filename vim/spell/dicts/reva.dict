'
-
!
(.)
*
*/
*/mod
.s
/
/mod
;
;;
;inline
?dup
@
[']
+
+!
+to
<
<<
<>
<>if
<args>
<if
=
=if
>
>>
>digit
>double
>float
>if
>number
>r
>single
1-
1+
2!
2@
2cell-
2cell+
2drop
2dup
2nip
2over
2rot
2swap
3cell+
3drop
4cell+
abs
again
align
aligned
allocate
allot
and
base
binary
bugbug
bugbug:
c!
c@
catch
cell
cell-
cell+
cells
CHAR
char+
chars
compile
constant
constant,
context:
CR
create
d-
d+
dabs
decimal
defer
defer!
defer@
digit>
dmax
dmin
dnegate
do
does>
drop
dump
dup
else
EMIT
EXPECT
fill
FIND
fixme
fm/mod
forth
free
here
hex
i
if
if0
immediate
inline
invert
is
j
KEY
KEY?
keyword
keywords
leave
literal
loop
m*
m*/
m+
macro
max
min
mod
more
move
negate
nip
non-FORTH
not
note:
octal
or
over
pick
r@
r>
rdrop
repeat
resize
revaBuiltin
revaCharOps
revastack
roll
rot
-rot
rp!
rp@
s>d
see
skip
sm/rem
sp!
sp@
swap
syn
then
throw
TIB
to
todo
todo:
-TRAILING
tuck
TYPE
u<
um*
um/mod
umax
umin
unloop
until
user
value
variable
variable,
while
WORD
xor
